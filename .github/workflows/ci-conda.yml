# Extracted by https://gist.github.com/mwouts/9842452d020c08faf9e84a3bba38a66f
name: CI (conda)
on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest'] #, 'windows-latest']
        python-version: [3.7]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('environment.yml') }}
      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: hcrystalball
          python-version: ${{ matrix.python-version }}
          channels: defaults,conda-forge
          environment-file: environment.yml
          use-only-tar-bz2: true
      - name: Lint with flake8
        shell: pwsh
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # all Python files should follow PEP8 (except some notebooks, see setup.cfg)
          flake8 hcrystalball tests
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Install from source
        # This is required for the pre-commit tests
        shell: pwsh
        run: pip install .
      - name: Conda list
        shell: pwsh
        run: conda list
      - name: Test with pytest
        shell: pwsh
        run: |
          if("${{ matrix.os }}" -eq "windows-latest"){
             pytest
          } else {
             pytest --cov=./ --cov-report=xml
          }
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        if: ${{ matrix.os != 'windows-latest' }}
